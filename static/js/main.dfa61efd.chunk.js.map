{"version":3,"sources":["components/Input.js","components/Weather.js","App.js","index.js"],"names":["Input","option","change","submit","className","onSubmit","name","value","onChange","variant","Weather","props","weather","map","city","key","id","cityName","main","temp","toFixed","humidity","pressure","wind","speed","src","icon","alt","description","class","WeatherApp","state","weatherSectionClass","handleOptionChange","e","setState","target","handleWeatherRender","preventDefault","querySelector","options","selectedIndex","text","fetch","then","resp","json","data","concat","this","Component","ReactDOM","render","document","getElementById"],"mappings":"yUA+BeA,G,YA5BD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC/B,OACE,0BAAMC,UAAU,OAAOC,SAAUF,GAC/B,0DACA,4BAAQG,KAAK,SAASC,MAAON,EAAQO,SAAUN,GAC7C,4BAAQK,MAAM,cAAd,cACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,0BAAd,cACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,qBAAd,qBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,mBAAd,oBAEF,4BAAQE,QAAQ,WAAhB,aCYSC,G,MApCC,SAAAC,GACd,IAAMC,EAAUD,EAAMC,QAAQC,KAAI,SAAAC,GAChC,OACE,yBAAKC,IAAKD,EAAKE,GAAIZ,UAAU,WAC3B,kCAAQO,EAAMM,SAAd,aACA,4BACE,wBAAIb,UAAU,QACZ,4CACe,2BAAIU,EAAKI,KAAKC,KAAKC,UAAnB,UAEf,6CACgB,2BAAIN,EAAKI,KAAKG,SAAd,MAEhB,qDACwB,2BAAIP,EAAKI,KAAKI,SAAd,SAExB,2CACc,2BAAIR,EAAKS,KAAKC,MAAd,UAGhB,yBAAKpB,UAAU,OACb,yBACEqB,IAAG,2CAAsCX,EAAKF,QAAQ,GAAGc,KAAtD,WACHC,IAAI,kBAGR,yBAAKvB,UAAU,SACb,wBAAIA,UAAU,eAAeU,EAAKF,QAAQ,GAAGgB,mBAMvD,OAAO,6BAASxB,UAAWO,EAAMkB,OAAQjB,KCuB5BkB,E,2MApDbC,MAAQ,CACNnB,QAAS,GACTE,KAAM,UACNG,SAAU,UACVe,oBAAqB,W,EAEvBC,mBAAqB,SAAAC,GACnB,EAAKC,SAAS,CACZrB,KAAMoB,EAAEE,OAAO7B,S,EAGnB8B,oBAAsB,SAAAH,GACpBA,EAAEI,iBACF,EAAKH,SAAS,CACZvB,QAAS,GACTK,SAAUiB,EAAEE,OAAOG,cAAc,UAAUC,QACzCN,EAAEE,OAAOG,cAAc,UAAUC,QAAQC,eACzCC,KACFV,oBAAqB,YAEvBW,MAAM,qDAAD,OACkD,EAAKZ,MAAMjB,KAD7D,4DAGF8B,MAAK,SAAAC,GACJ,OAAOA,EAAKC,UAEbF,MAAK,SAAAG,GACJ,IAAInC,EAAU,EAAKmB,MAAMnB,QAAQoC,OAAOD,GACxC,EAAKZ,SAAS,CAAEvB,UAASoB,oBAAqB,uB,wEAKlD,OACE,yBAAK5B,UAAU,UACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,CACEH,OAAQgD,KAAKlB,MAAMjB,KACnBZ,OAAQ+C,KAAKhB,mBACb9B,OAAQ8C,KAAKZ,sBAEf,kBAAC,EAAD,CACEzB,QAASqC,KAAKlB,MAAMnB,QACpBK,SAAUgC,KAAKlB,MAAMd,SACrBY,MAAOoB,KAAKlB,MAAMC,4B,GA7CLkB,aCCzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.dfa61efd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = ({ option, change, submit }) => {\r\n  return (\r\n    <form className=\"form\" onSubmit={submit}>\r\n      <p>select your provincial city</p>\r\n      <select name=\"cities\" value={option} onChange={change}>\r\n        <option value=\"Rzeszów\">Rzeszów</option>\r\n        <option value=\"Kraków\">Kraków</option>\r\n        <option value=\"Lublin\">Lublin</option>\r\n        <option value=\"Kielce\">Kielce</option>\r\n        <option value=\"Białystok\">Białystok</option>\r\n        <option value=\"Bydgoszcz\">Bydgoszcz</option>\r\n        <option value=\"Gdańsk\">Gdańsk</option>\r\n        <option value=\"Gorzów Wielkopolski\">Gorzów </option>\r\n        <option value=\"Katowice\">Katowice</option>\r\n        <option value=\"Łódź\">Łódź</option>\r\n        <option value=\"Opole\">Opole</option>\r\n        <option value=\"Poznań\">Poznań</option>\r\n        <option value=\"Szczecin\">Szczecin</option>\r\n        <option value=\"Toruń\">Toruń</option>\r\n        <option value=\"Warszawa\">Warszawa</option>\r\n        <option value=\"Wrocław\">Wrocław</option>\r\n        <option value=\"Zielona Góra\">Zielona Góra</option>\r\n      </select>\r\n      <button variant=\"success\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./Weather.css\";\r\nconst Weather = props => {\r\n  const weather = props.weather.map(city => {\r\n    return (\r\n      <div key={city.id} className=\"results\">\r\n        <h2>In {props.cityName} we have:</h2>\r\n        <ul>\r\n          <ul className=\"info\">\r\n            <li>\r\n              Temperature: <i>{city.main.temp.toFixed()}&deg;C</i>\r\n            </li>\r\n            <li>\r\n              Air humidity: <i>{city.main.humidity}%</i>\r\n            </li>\r\n            <li>\r\n              Atmospheric pressure: <i>{city.main.pressure} hPa</i>\r\n            </li>\r\n            <li>\r\n              Wind speed: <i>{city.wind.speed} m/s</i>\r\n            </li>\r\n          </ul>\r\n          <div className=\"img\">\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${city.weather[0].icon}@2x.png`}\r\n              alt=\"weather icon\"\r\n            />\r\n          </div>\r\n          <div className=\"descr\">\r\n            <li className=\"description\">{city.weather[0].description}</li>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    );\r\n  });\r\n  return <section className={props.class}>{weather}</section>;\r\n};\r\n\r\nexport default Weather;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport Weather from \"./components/Weather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nclass WeatherApp extends Component {\n  state = {\n    weather: [],\n    city: \"Rzeszow\",\n    cityName: \"Rzeszow\",\n    weatherSectionClass: \"weather\"\n  };\n  handleOptionChange = e => {\n    this.setState({\n      city: e.target.value\n    });\n  };\n  handleWeatherRender = e => {\n    e.preventDefault();\n    this.setState({\n      weather: [],\n      cityName: e.target.querySelector(\"select\").options[\n        e.target.querySelector(\"select\").options.selectedIndex\n      ].text,\n      weatherSectionClass: \"weather\"\n    });\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${this.state.city},pl&units=metric&appid=4879d336b1c4edb2ed496323d72fb969`\n    )\n      .then(resp => {\n        return resp.json();\n      })\n      .then(data => {\n        let weather = this.state.weather.concat(data);\n        this.setState({ weather, weatherSectionClass: \"weather active\" });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"inside\">\n        <div className=\"app\">\n          <Input\n            option={this.state.city}\n            change={this.handleOptionChange}\n            submit={this.handleWeatherRender}\n          />\n          <Weather\n            weather={this.state.weather}\n            cityName={this.state.cityName}\n            class={this.state.weatherSectionClass}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WeatherApp;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}